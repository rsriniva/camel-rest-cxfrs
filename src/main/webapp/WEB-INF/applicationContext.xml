<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
            http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
            http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
            http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">

    <!-- cxf;rsServerとエンドポイントは1:1 -->
    <!-- 複数のエンドポイントで共有できない -->
    <!-- RESTのエンドポイントの設定 CusromersService -->
    <cxf:rsServer xmlns:cxf="http://camel.apache.org/schema/cxf"
                  id="customers"
                  address="http://localhost:9999/c"
                  loggingFeatureEnabled="true" 
                  loggingSizeLimit="200" 
                  skipFaultLogging="true">
        <cxf:providers>
            <!-- 使用するJSONの実装 指定しなければJettison -->
            <!--<ref bean="jacksonProvider" />-->
            <ref bean="jacksonJaxbProvider" />
            <!--<ref bean="jettisonProvider" />-->
        </cxf:providers>
    </cxf:rsServer>

    <!-- RESTのエンドポイントの設定 EmployersService -->
    <cxf:rsServer xmlns:cxf="http://camel.apache.org/schema/cxf"
                  id="employers"
                  address="http://localhost:9999/e"
                  loggingFeatureEnabled="true" 
                  loggingSizeLimit="200" 
                  skipFaultLogging="true">
        <cxf:providers>
            <!-- 使用するJSONの実装 指定しなければJettison -->
            <!--<ref bean="jacksonProvider" />-->
            <ref bean="jacksonJaxbProvider" />
            <!--<ref bean="jettisonProvider" />-->
        </cxf:providers>
    </cxf:rsServer>
    
    <!-- Jsonの実装 -->    
    <bean id="jacksonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
    <bean id="jacksonJaxbProvider" class="org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider" />
    <bean id="jettisonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider" />
    
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    
    <!-- Jettyの設定(ssl, thread poolなど) -->
    <httpj:engine-factory xmlns:sec="http://cxf.apache.org/configuration/security" 
                          xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration">
        <!-- cxf:rsServerで指定したポート番号を合わせる -->
        <httpj:engine port="9999">
            <!-- SSL http://wiki.eclipse.org/Jetty/Howto/Configure_SSL -->
            <!--
            <httpj:tlsServerParameters>
                <sec:keyManagers keyPassword="osseai">
                    <sec:keyStore type="JKS" password="osseai" resource="osseai.keystore"/>
                </sec:keyManagers>
                <sec:trustManagers>
                    <sec:keyStore type="JKS" password="osseai" resource="osseai.keystore"/>
                </sec:trustManagers>
            </httpj:tlsServerParameters>
            -->
            <!-- Thread pool -->
            <httpj:threadingParameters minThreads="10" maxThreads="10" />
        </httpj:engine>
    </httpj:engine-factory>
      
    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <endpoint id="customersEndpoint" uri="cxfrs://bean://customers?resourceClasses=com.buildria.camel.cxfrs.customers.CustomersService&amp;bindingStyle=SimpleConsumer" />
        <endpoint id="employersEndpoint" uri="cxfrs://bean://employers?resourceClasses=com.buildria.camel.cxfrs.employers.EmployersService&amp;bindingStyle=SimpleConsumer" />
        
        <route>
            <from ref="customersEndpoint" />
            <!--<from uri="cxfrs://bean://rsServer" />-->
            <log message="BODY: ${body}" />
            <log message="HEADERS: ${headers}" />
            <choice>
                <when>
                    <simple>$simple{headers.operationName} == 'getCustomer'</simple>
                    <bean ref="cutomersServiceImpl" method="getCustomer" />
                </when>
                <when>
                    <simple>$simple{headers.operationName} == 'getCustomers'</simple>
                    <bean ref="cutomersServiceImpl" method="getCustomers" />
                </when>
                <otherwise>
                    <log message="No suitable process for $simple{headers.operationName}" />
                    <setHeader headerName="CamelHttpResponseCode">
                        <constant>404</constant>
                    </setHeader>
                </otherwise>
            </choice>
        </route>

        <route>
            <from ref="employersEndpoint" />
            <!--<from uri="cxfrs://bean://rsServer" />-->
            <log message="BODY: ${body}" />
            <log message="HEADERS: ${headers}" />
            <choice>
                <when>
                    <simple>$simple{headers.operationName} == 'getEmployer'</simple>
                    <bean ref="employersServiceImpl" method="getEmployer" />
                </when>
                <when>
                    <simple>$simple{headers.operationName} == 'getEmployers'</simple>
                    <bean ref="employersServiceImpl" method="getEmployers" />
                </when>
                <otherwise>
                    <log message="No suitable process for $simple{headers.operationName}" />
                    <setHeader headerName="CamelHttpResponseCode">
                        <constant>404</constant>
                    </setHeader>
                </otherwise>
            </choice>
        </route>
    </camelContext>
    
    <!-- RESTの実装クラス -->
    <bean id="cutomersServiceImpl" class="com.buildria.camel.cxfrs.customers.CustomersServiceImpl" />
    <bean id="employersServiceImpl" class="com.buildria.camel.cxfrs.employers.EmployersServiceImpl" />

    <!-- CamelのプロパティでJSONの実装を指定する場合に使用する -->
    <bean id="providers" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <!--<ref bean="jacksonProvider" />-->
                <ref bean="jacksonJaxbProvider" />
                <!--<ref bean="jettisonProvider" />-->
            </list>
        </constructor-arg>
    </bean>
</beans>
