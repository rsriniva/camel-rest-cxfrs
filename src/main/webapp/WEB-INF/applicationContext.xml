<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
            http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
            http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
            http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">

    <cxf:rsServer xmlns:cxf="http://camel.apache.org/schema/cxf"
                  id="rsServer"
                  address="http://localhost:9999/cxfrs"
                  serviceClass="com.buildria.camel.cxfrs.customers.CustomersService" 
                  loggingFeatureEnabled="true" 
                  loggingSizeLimit="200" 
                  skipFaultLogging="true">
        <cxf:providers>
            <!--<ref bean="jacksonProvider" />-->
            <ref bean="jettisonProvider" />
        </cxf:providers>
    </cxf:rsServer>
    
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    
    <httpj:engine-factory xmlns:sec="http://cxf.apache.org/configuration/security" 
                          xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration">
        <httpj:engine port="9998">
            <!-- SSL -->
            <httpj:tlsServerParameters>
                <!-- http://wiki.eclipse.org/Jetty/Howto/Configure_SSL -->
                <sec:keyManagers keyPassword="osseai">
                    <sec:keyStore type="JKS" password="osseai" resource="osseai.keystore"/>
                </sec:keyManagers>
                <sec:trustManagers>
                    <sec:keyStore type="JKS" password="osseai" resource="osseai.keystore"/>
                </sec:trustManagers>
            </httpj:tlsServerParameters>
            <!-- Thread pool -->
            <httpj:threadingParameters minThreads="10" maxThreads="10" />
        </httpj:engine>
    </httpj:engine-factory>
      
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="cxfrs://bean://rsServer?bindingStyle=SimpleConsumer" />
            <!--<from uri="cxfrs://bean://rsServer" />-->
            <log message="BODY: ${body}" />
            <log message="HEADERS: ${headers}" />
            <choice>
                <when>
                    <simple>$simple{headers.operationName} == 'getCustomer'</simple>
                    <process ref="cutomerProcessor" />
                </when>
                <when>
                    <simple>$simple{headers.operationName} == 'getCustomers'</simple>
                    <process ref="cutomersProcessor" />
                </when>
                <otherwise>
                    <log message="No suitable process for $simple{headers.operationName}" />
                </otherwise>
            </choice>
        </route>
    </camelContext>
    
    <bean id="cutomerProcessor" class="com.buildria.camel.cxfrs.customers.CustomerProcessor" />
    <bean id="cutomersProcessor" class="com.buildria.camel.cxfrs.customers.CustomersProcessor" />

    <bean id="jacksonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
    <bean id="jettisonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider" />
    
    <bean id="providers" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="jacksonProvider" />
                <!--<ref bean="jettisonProvider" />-->
            </list>
        </constructor-arg>
    </bean>
</beans>
